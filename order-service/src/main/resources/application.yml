server:
  port: ${PORT:0}
spring:
  application:
    name: order-service
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url:  jdbc:mysql://localhost:3306/codeforsolution
    username: root
    password: mysql
    driver-class-name:  com.mysql.cj.jdbc.Driver
  devtools:
    restart:
      enabled:  true
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      name: order_topic
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone:  http://localhost:8761/eureka/
management:
  endpoints.web.exposure.include:
    - '*'
  endpoint.health.show-details: always
  health.circuitbreakers.enabled: true

resilience4j.circuitbreaker:
  instances:
    placeOrderCall:
      registerHealthIndicator: true
      slidingWindowSize: 5
      minimumNumberOfCalls: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000  # 10 seconds
      permittedNumberOfCallsInHalfOpenState: 2
inventorty:
  base:
    url: http://localhost:8787/inventory-service/api/inventory/
